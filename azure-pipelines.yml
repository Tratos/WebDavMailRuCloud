# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  tags:
    include:
    - '1.*'
    - '2.*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#=============================================================================================================

- task: VSBuild@1
  displayName: .NET Build
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    vsVersion: '16.0'
    msbuildArgs: '/t:"Restore;Build" /p:Configuration="Release" /p:Platform="Any CPU"'

- task: Bash@3
  displayName: .NET artifacts clean
  inputs:
    targetType: 'inline'
    script: 'rm WDMRC.Console/bin/Release/net461/*.pdb
    && rm WDMRC.Console/bin/Release/net461/Microsoft.*.dll
    && rm WDMRC.Console/bin/Release/net461/System.*.dll
    && rm WDMRC.Console/bin/Release/net461/netstandard.dll'

- task: ArchiveFiles@2
  displayName: .NET artifacts archive
  inputs:
    rootFolderOrFile: 'WDMRC.Console/bin/Release/net461/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet461.zip'
    replaceExistingArchive: true

#=============================================================================================================

- task: DotNetCoreCLI@2
  displayName: .NETCore publish to zip
  inputs:
    command: 'publish' 
    projects: 'WDMRC.Console/WDMRC.Console.csproj'
    publishWebProjects: false # Required when command == Publish
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp2.2'

- task: Bash@3
  displayName: .NETCore copy artifact to $(Build.ArtifactStagingDirectory)/WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNetCore22.zip
  inputs:
    targetType: 'inline'
    script: 'cp WDMRC.Console/bin/Release/netcoreapp2.2/publish.zip ''$(Build.ArtifactStagingDirectory)''/WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNetCore22.zip'

#- task: CopyFiles@2
#  displayName: .NETCore copy artifact
#  inputs:
#    SourceFolder: 'WDMRC.Console/bin/Release/netcoreapp2.2/'
#    Contents: 'publish.zip'
#    TargetFolder: '$(Build.ArtifactStagingDirectory)'

#- task: Bash@3
#  displayName: .NETCore artifacts clean
#  inputs:
#    targetType: 'inline'
#    script: 'rm WDMRC.Console/bin/Release/netcoreapp2.2/*.pdb'

#- task: ArchiveFiles@2
#  displayName: .NETCore artifacts archive
#  inputs:
#    rootFolderOrFile: 'WDMRC.Console/bin/Release/netcoreapp2.2/'
#    includeRootFolder: false
#    archiveType: 'zip'
#    archiveFile: '$(Build.ArtifactStagingDirectory)/WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNetCore22.zip'
#    replaceExistingArchive: true

#=============================================================================================================

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

#=============================================================================================================

- task: GitHubRelease@0
  displayName: Publish artifacts to github
  inputs:
    gitHubConnection: YaRGithubAzure
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create' # Options: create, edit, delete
    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
    tagSource: 'auto' # Required when action == Create# Options: auto, manual
    #tag: # Required when action == Edit || Action == Delete || TagSource == Manual
    #title: # Optional
    #releaseNotesSource: 'file' # Optional. Options: file, input
    #releaseNotesFile: # Optional
    #releaseNotes: # Optional
    #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
    #assetUploadMode: 'delete' # Optional. Options: delete, replace
    #isDraft: false # Optional
    #isPreRelease: false # Optional
    #addChangeLog: true # Optional

#=============================================================================================================

#- task: CmdLine@2
#  inputs:
#    script: 'tree $(Build.SourcesDirectory) /F'

#- task: CmdLine@2
#  inputs:
#    script: 'tree $(Build.ArtifactStagingDirectory) /F'



